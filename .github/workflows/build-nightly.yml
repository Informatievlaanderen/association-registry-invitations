name: Nightly Build

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 0 * * *' # Runs every night at midnight UTC

jobs:

  set-release-version:
    if: github.repository_owner == 'Informatievlaanderen'
    name: Decide next version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Set Release Version
        id: set-version
        run: |
          echo $(date +%Y).$(date +%m).$(date +%d) > semver
          echo $(cat semver)
          echo ::set-output name=version::$(cat semver)
          echo RELEASE_VERSION=$(cat semver) >> $GITHUB_ENV
        shell: bash

  test:
    if: github.repository_owner == 'Informatievlaanderen'
    name: Test
    runs-on: ubuntu-latest
    needs: [ set-release-version ]
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: E@syP@ssw0rd
          MSSQL_TCP_PORT: 21433
        ports:
          - 21433:21433
      acm:
        image: ghcr.io/informatievlaanderen/acmidm:1.311.2
        ports:
          - 5050:80
      wiremock:
        image: ghcr.io/informatievlaanderen/wiremock:main
        ports:
          - 8080:8080
      opensearch:
        image: opensearchproject/opensearch:1.1.0
        env:
          discovery.type: single-node
          DISABLE_SECURITY_PLUGIN: true
        ports:
          - 9200:9200
          - 9600:9600

    outputs:
      version: ${{ steps.set-version.outputs.version }}
      test: "test"

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: ./.github/actions/setup-dotnet

      - name: Parse repository name
        run: echo REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") >> $GITHUB_ENV
        shell: bash

      - name: Test Solution
        shell: bash
        run: ./build.sh Test_Solution

  build-invitations-api:
    if: github.repository_owner == 'informatievlaanderen' && needs.set-release-version.outputs.version != 'none'
    name: Build Invitations Api
    needs: [ test, set-release-version ]
    uses: ./.github/workflows/build-image.yml
    with:
      build-target: Containerize_Api
      build-project: OrganisationRegistry.Api
      image-file: api.tar
      image-name: api
      semver: ${{ needs.set-release-version.outputs.version }}
    secrets: inherit

  build-invitations-archiver:
    if: github.repository_owner == 'Informatievlaanderen' && needs.set-release-version.outputs.version != 'none'
    name: Build Invitations Archiver
    needs: [ test, set-release-version ]
    uses: ./.github/workflows/build-image.yml
    with:
      build-target: Containerize_Archiver
      build-project: OrganisationRegistry.Archiver
      image-file: archiver.tar
      image-name: archiver
      semver: ${{ needs.set-release-version.outputs.version }}
    secrets: inherit

  notify-success:
    if: ${{ success() }}
    name: Notify Slack of Success
    runs-on: ubuntu-latest
    needs:
      - test
      - build-api
      - build-archiver
    steps:
      - name: Post to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: ":thumbsup: VR+ Nightly build succeeded: \n
          ${{github.event.head_commit.url }} \n
          ${{format('{0}: {1}', 'test', needs.test.result) }}\n
          ${{format('{0}: {1}', 'build-invitations-api', needs.build-invitations-api.result) }}\n
          ${{format('{0}: {1}', 'build-invitations-archiver', needs.build-invitations-archiver.result) }}\n
          ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  notify-failure:
    if: ${{ failure() }}
    name: Notify Slack of Failure
    runs-on: ubuntu-latest
    needs:
      - test
      - build-api
      - build-archiver
    steps:
      - name: Post to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.21.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          # For posting a simple plain text message
          slack-message: ":thumbsdown: VR+ Nightly build failed some checks: \n
          ${{github.event.head_commit.url }} \n
          ${{format('{0}: {1}', 'test', needs.test.result) }}\n
          ${{format('{0}: {1}', 'build-invitations-api', needs.build-invitations-api.result) }}\n
          ${{format('{0}: {1}', 'build-invitations-archiver', needs.build-invitations-archiver.result) }}\n
          ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
